#include<iostream>
#include<fstream>
using namespace std;

void noncommutative(int a[3][3], int b[3][3], int c[3][3]){
    int m[24]; 
    m[1]= (a[0][0] + a[0][1] + a[0][2] - a[1][0] - a[1][1] - a[2][1] - a[2][2]) * b[1][1];
    m[2]= (a[0][0] - a[1][0]) * (-b[0][1] + b[1][1]);
    m[3]= a[1][1] * (-b[0][0] + b[0][1] + b[1][0] - b[1][1] - b[1][2] - b[2][0] + b[2][2]);
    m[4]= (-a[0][0] + a[1][0] + a[1][1]) * (b[0][0] - b[0][1] + b[1][1]);
    m[5]= (a[1][0] + a[1][1]) * (-b[0][0] + b[0][1]);
    m[6]= a[0][0] * b[0][0];
    m[7]= (-a[0][0] + a[2][0] + a[2][1]) * (b[0][0] - b[0][2] + b[1][2]);
    m[8]= (-a[0][0] + a[2][0]) * (b[0][2] - b[1][2]);
    m[9]= (a[2][0] + a[2][1]) * (-b[0][0] + b[0][2]);
    m[10]= (a[0][0] + a[0][1] + a[0][2] - a[1][1] - a[1][2] - a[2][0] - a[2][1]) * b[1][2];
    m[11]= a[2][1] * (-b[0][0] + b[0][2] + b[1][0] - b[1][1] - b[1][2] - b[2][0] + b[2][1]);
    m[12]= (-a[0][2] + a[2][1] + a[2][2]) * (b[1][1] + b[2][0] - b[2][1]);
    m[13]= (a[0][2] - a[2][2]) * (b[1][1] - b[2][1]);
    m[14]= a[0][2] * b[2][0];
    m[15]= (a[2][1] + a[2][2]) * (-b[2][0] + b[2][1]);
    m[16]= (-a[0][2] + a[1][1] + a[1][2]) * (b[1][2] + b[2][0] - b[2][2]);
    m[17]= (a[0][2] - a[1][2]) * (b[1][2] - b[2][2]);
    m[18]= (a[1][1] + a[1][2]) * (-b[2][0] + b[2][2]);
    m[19]= a[0][1] * b[1][0];
    m[20]= a[1][2] * b[2][1];
    m[21]= a[1][0] * b[0][2];
    m[22]= a[2][0] * b[0][1];
    m[23]= a[2][2] * b[2][2];
    c[0][0] = m[6] + m[14] + m[19];
    c[0][1] = m[1] + m[4] + m[5] + m[6] + m[12] + m[14] + m[15];
    c[0][2] = m[6] + m[7] + m[9] + m[10] + m[14] + m[16] + m[18];
    c[1][0] = m[2] + m[3] + m[4] + m[6] + m[14] + m[16] + m[17];
    c[1][1] = m[2] + m[4] + m[5] + m[6] + m[20];
    c[1][2] = m[14] + m[16] + m[17] + m[18] + m[21];
    c[2][0] = m[6] + m[7] + m[8] + m[11] + m[12] + m[13] + m[14];
    c[2][1] = m[12] + m[13] + m[14] + m[15] + m[22];
    c[2][2] = m[6] + m[7] + m[8] + m[9] + m[23];    
}

int main(){
    ios_base::sync_with_stdio(false);
	cin.tie(0);
	ifstream fin("input_2.txt");
	if(!fin.is_open()){
		cout << "File not found";
		exit(0);
	}
	int n;
	fin >> n;
    int a[3][3], b[3][3], c[3][3];
	for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++) fin >> a[i][j];
    }
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++) fin >> b[i][j];
    }
	fin.close();
    noncommutative(a, b, c);
    for(int i = 0; i < 3; i++){
        for(int j = 0; j < 3; j++) cout << c[i][j] << " ";
        cout << endl;
    }
    return 0;
}